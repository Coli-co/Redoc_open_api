openapi: 3.0.0
info:
  description: |
    You can find out more about Swagger at [http://swagger.io](http://swagger.io).

    # Introduction
    This API is documented in **OpenAPI format**.
    It is illustrated how to check the situation of clock in and clock out of employees and how to clock in and clock out.  
  version: 1.0.0
  title: Swagger Employees
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: API Support
    email: apiteam@swagger.io
    url: https://github.com/Redocly/redoc
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

tags:
  - name: employees
    description: Everything about employees attendance.
x-tagGroups:
  - name: General
    tags:
      - employees
paths:
  /employees:
    post: 
      tags:
        - employees
      summary: Feature of clockin and clockout
      description: Employee can create clockin and clockout record.
      responses:
        '201':
          description: |
            - ClockIn record created successfully.
            - ClockOut record created successfully.
            - Employee record created successfully.
        '400':
          description: |
            - ClockIn or clockOut must be greater than zero.
            - Work time should not be greater than off-work time.
            - Request body of employeeNumber or clockIn or clockOut required.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clockin'
        required: true
    get:
      tags:
        - employees
      summary:  All employees records
      description: Get all employees records with or without specific date.
      parameters:
        - name: date
          in: query
          schema:
            type: integer
          description: Date in millisecond
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allEmployee'
  '/employees/{employeenumber}': 
    put:
      tags:
        - employees
      summary: Supplementary time of clockin or clockout
      description: Employee can fill in clockin or clockout data.
      parameters:
        - name: employeenumber
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: |
            - Clockin record updated successfully.
            - Clockout record updated successfully.
        '400':
          description:  |
            - Request body of clockin or clockout required.
            - You do not need to fill in clockin or clockout data.
            - Work time must be less than off-work time or off-work time must be greater than work time.
        '404':
          description: Employee not found.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClockFilled'
        required: true
  /employees/noclockout:
    get:
      tags:
        - employees
      summary: No clockout employees
      description: Get all employees with no clockout in specific date range.
      parameters:
          - name: start
            in: query
            schema:
              type: integer
            description: Start date in millisecond
            required: true
          - name: end
            in: query
            schema:
              type: integer
            description: End date in millisecond
            required: true
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/noclockoutEmployee'
        '400':
          description: Start date must be less than end date.  
  /employees/clockin-earliest:
    get:
      tags:
        - employees
      summary:  Clockin earliest employees
      description: List top five employees with clockin earliest at specific date.
      parameters:
          - name: date
            in: query
            schema:
              type: integer
            description: Date in millisecond
            required: true
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clockinEarliestEmployee'
        '400':
          description: Start date must be less than end date.


components:
  schemas:
    Clockin:
      properties: 
        employeeNumber:
          description: Employee number
          type: integer
          minLength: 1
          example: 1110001
        clockIn:
          description: Clockin in millisecond and it should be less than clockout.
          type: string
          minLength: 1
          example: 1641361320000
        clockOut: 
          description: Clockout in millisecond and it should be larger than clockout.
          type: string
          minLength: 1
          example: 1641376740000
    ClockFilled:
      properties: 
        clockIn:
          description: Clockin in millisecond and it should be less than clockout.
          type: string
          example: 1641170400000
        clockOut: 
          description: Clockout in millisecond and it should be larger than clockout.
          type: string
          example: 1641201720000
    allEmployee:
      type: array
      minItems: 0
      items: 
        - type: object
          properties:
            id:
              type: integer
              example: 2
            employeenumber:
              type: integer
              example: 11100001
            clockin:
              type: integer
              example: 1641168000000
            clockout:
              type: integer
              example: 1641202380000
            rest:
              type: integer
              default: 1.5
            totalWorkTime:
              type: float
              example: 9.55
      additionalItems:
          type: object
    noclockoutEmployee:
      type: array
      minItems: 0
      items: 
        - type: object
          properties:
            id:
              type: integer
              example: 11
            employeenumber:
              type: integer
              example: 11100011
            clockin:
              type: integer
              example: 1641170340000
            clockout: 
              type: integer
              default: null
      additionalItems:
          type: object
    clockinEarliestEmployee:
      type: array
      minItems: 0
      items: 
        - type: object
          properties:
            id:
              type: integer
              example: 34
            employeenumber:
              type: integer
              example: 11100011
            clockin:
              type: integer
              example: 1641345360000
            clockout:
              type: integer
              example: 1641374400000  
      additionalItems:
          type: object
